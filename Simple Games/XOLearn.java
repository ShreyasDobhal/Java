/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
 import java.util.*;
 import java.io.*;

/**
 *
 * @author Shreyas
 */
public class XOLearn extends javax.swing.JFrame {
    
    int turn=1;
    String moves="";
    boolean justOnce=true;
    private boolean x[]={false,false,false,false,false,false,false,false,false};
    private boolean o[]={false,false,false,false,false,false,false,false,false};
    private int chance=0;
    ArrayList<String> mv = new ArrayList<>();;
    /**
     * Creates new form XOLearn
     */
    public XOLearn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn2 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtDisplay = new javax.swing.JTextField();
        btnRestart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt){
                btn1ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtDisplay.setEditable(false);
        txtDisplay.setFont(new java.awt.Font("Myriad Web Pro", 0, 18)); // NOI18N
        txtDisplay.setText("Player 1's Turn");

        btnRestart.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRestart.setText("Restart");
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRestart)
                .addGap(68, 68, 68))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btnRestart)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>                        

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+0;
        if (!(x[0]||o[0]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn1.setText("X");
                x[0]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn1.setText("O");
                o[0]=true;
                turn=1;
            }
            chance++;
            win();
        }
        
    }                                    

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+1;
        if (!(x[1]||o[1]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn2.setText("X");
                x[1]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn2.setText("O");
                o[1]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+2;
        if (!(x[2]||o[2]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn3.setText("X");
                x[2]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn3.setText("O");
                o[2]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+3;
        if (!(x[3]||o[3]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn4.setText("X");
                x[3]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn4.setText("O");
                o[3]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+4;
        if (!(x[4]||o[4]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn5.setText("X");
                x[4]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn5.setText("O");
                o[4]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+5;
        if (!(x[5]||o[5]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn6.setText("X");
                x[5]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn6.setText("O");
                o[5]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+6;
        if (!(x[6]||o[6]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn7.setText("X");
                x[6]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn7.setText("O");
                o[6]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+7;
        if (!(x[7]||o[7]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn8.setText("X");
                x[7]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn8.setText("O");
                o[7]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        moves=moves+8;
        if (!(x[8]||o[8]))
        {
            // Button was not pressed earlier
            if (turn==1)
            {
                btn9.setText("X");
                x[8]=true;
                turn=2;
            }
            else if (turn==2)
            {
                btn9.setText("O");
                o[8]=true;
                turn=1;
            }
            chance++;
            win();
        }
    }                                    

    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        turn=(int)(Math.random()*2)+1;
        justOnce=true;
        mv = new ArrayList<>();
        moves="";
        for (int i=0;i<9;i++)
        {
            x[i]=false;
            o[i]=false;
        }
        chance=0;
        txtDisplay.setText("Player "+turn+"'s Turn");
        btn1.setEnabled(true);
        btn2.setEnabled(true);
        btn3.setEnabled(true);
        btn4.setEnabled(true);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        btn8.setEnabled(true);
        btn9.setEnabled(true);
        
        btn1.setText("");
        btn2.setText("");
        btn3.setText("");
        btn4.setText("");
        btn5.setText("");
        btn6.setText("");
        btn7.setText("");
        btn8.setText("");
        btn9.setText("");
        win();
    }                                          
    private void btnSetText(int i,String s)
    {
        switch(i)
        {
            case 0:
                btn1.setText(s);
                break;
            case 1:
                btn2.setText(s);
                break;
            case 2:
                btn3.setText(s);
                break;
            case 3:
                btn4.setText(s);
                break;
            case 4:
                btn5.setText(s);
                break;
            case 5:
                btn6.setText(s);
                break;
            case 6:
                btn7.setText(s);
                break;
            case 7:
                btn8.setText(s);
                break;
            case 8:
                btn9.setText(s);
                break;
        }
    }//btnSetText()
    private void win()
    {
        boolean over=false;
        if ((x[0]&&x[1]&&x[2])||(x[3]&&x[4]&&x[5])||(x[6]&&x[7]&&x[8])||(x[0]&&x[3]&&x[6])||(x[1]&&x[4]&&x[7])||(x[2]&&x[5]&&x[8])||(x[0]&&x[4]&&x[8])||(x[2]&&x[4]&&x[6]))
        {
            txtDisplay.setText("Player 1 Wins !");
            over=true;
        }
        else if ((o[0]&&o[1]&&o[2])||(o[3]&&o[4]&&o[5])||(o[6]&&o[7]&&o[8])||(o[0]&&o[3]&&o[6])||(o[1]&&o[4]&&o[7])||(o[2]&&o[5]&&o[8])||(o[0]&&o[4]&&o[8])||(o[2]&&o[4]&&o[6]))
        {
            txtDisplay.setText("Player 2 Wins !");
            over=true;
        }
        else if (chance==9)
        {
            txtDisplay.setText("Draw !");
            over=true;
        }
        if (over)
        {
            // Game Over
            btn1.setEnabled(false);
            btn2.setEnabled(false);
            btn3.setEnabled(false);
            btn4.setEnabled(false);
            btn5.setEnabled(false);
            btn6.setEnabled(false);
            btn7.setEnabled(false);
            btn8.setEnabled(false);
            btn9.setEnabled(false);
            
            if (txtDisplay.getText().equals("Player 2 Wins !"))
            {
                // AI wins, learn the solution
                Learn();
            }//if block
            else if (txtDisplay.getText().equals("Player 1 Wins !"))
            {
                // AI loses, but learn from mistakes
                String tmp="";
                for (int i=0;i<moves.length();i++)
                {
                    if (Character.isDigit((moves.charAt(i))))
                        tmp=tmp+(char)(moves.charAt(i)+65-48);
                    else
                        tmp=tmp+(moves.charAt(i)-65);
                }
                moves=tmp;
                Learn();
            }//else if block
            else
            {
                // AI draws, but still can learn
                Learn();
                String tmp="";
                for (int i=0;i<moves.length();i++)
                {
                    if (Character.isDigit((moves.charAt(i))))
                        tmp=tmp+(char)(moves.charAt(i)+65-48);
                    else
                        tmp=tmp+(moves.charAt(i)-65);
                }
                moves=tmp;
                Learn();
            }//else if block
            return;
        }
        if (turn==1)
        {
            txtDisplay.setText("Player 1's Turn");
        }
        else if (turn==2)
        {
            // AI move
            txtDisplay.setText("Player 2's Turn");
            int move=0;
            while (true)
            {
                // first use commone sense to do necessary moves
                move=commonSense();
                if (move==-1) // next use memory and past experience
                    move=Recall();
                if (move==-1) // move randomly
                    move=(int)(Math.random()*9);
                if (!x[move]&&!o[move]) // valid move found
                    break;
            }//while loop
            btnSetText(move,"O");
            o[move]=true;
            moves=moves+(char)(move+65);
            turn=1;
            chance++;
            win();
        }//else if block
    }//win()
    private void Learn()
    {
        try
        {
            FileWriter fw = new FileWriter("learn.dat",true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter p = new PrintWriter(bw);
            p.println(moves);
            p.flush();
            fw.close();
        }
        catch (Exception e)
        {
            System.out.println("Writing error");
        }
        dataSort();
    }//Learn
    
    private void dataSort()
    {
        ArrayList<String> arr = new ArrayList<>();
        try
        {
            FileReader fr = new FileReader("learn.dat");
            BufferedReader br = new BufferedReader(fr);
            String s="";
            while ((s=br.readLine())!=null)
            {
                arr.add(s);
            }
        }
        catch (Exception e)
        {
            System.out.println("Reading error");
        }
        int n=arr.size();
        int pos=0;
        for (int i=0;i<=n-1;i++)
        {
            pos=i;
            for (int j=i;j<=n-1;j++)
            {
                if ((arr.get(j)).compareTo(arr.get(pos))<0)
                {
                    pos=j;
                }
            }
            String t=arr.get(pos);
            arr.set(pos,arr.get(i));
            arr.set(i,t);
        }//for loop
        try
        {
            FileWriter fw = new FileWriter("learn.dat");
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter p = new PrintWriter(bw);
            if (n>=1)
                p.println(arr.get(0));
            for (int i=1;i<n;i++)
                if (!arr.get(i).equals(arr.get(i-1)))
                    p.println(arr.get(i));
            p.flush();
            fw.close();
        }
        catch (Exception e)
        {
            System.out.println("Writing error");
        }
    }//dataSort()
    private int Recall()
    {
        if (justOnce)
        {
            
            try
            {
                FileReader fr = new FileReader("learn.dat");
                BufferedReader br = new BufferedReader(fr);
                String s="";
                while ((s=br.readLine())!=null)
                {
                    mv.add(s);
                }
            }
            catch (Exception e)
            {
                System.out.println("Reading error");
            }
            justOnce=false;
        }
        int n=mv.size();
        int i,j=0;
        if (moves=="")
            return -1;
        ArrayList<String> possibleMoves = new ArrayList<String>();
        for (i=0;i<n;i++)
        {
            if (moves.length()>mv.get(i).length())
                return -1;
            for (j=0;j<moves.length();j++)
            {
                if (mv.get(i).charAt(j)!=moves.charAt(j))
                    break;
            }//for loop
            if (j==moves.length())
            {
                // Matching case found
                possibleMoves.add(mv.get(i));
            }//if block
        }//for loop
        if (possibleMoves.size()>0)
        {
            char ch = (possibleMoves.get((int)(Math.random()*possibleMoves.size())).charAt(moves.length()));
            int a=0;
            if (Character.isDigit(ch))
                a=ch-48;
            else
                a=ch-65;
            return a;
        }
        return -1;
    }//Read()
    private int commonSense()
    {
        /**
         *  X X -   - X X   X - X   X - -   X - -   - - -   X - -   - - X   X - -   - - X
         *  - - -   - - -   - - -   - - -   X - -   X - -   - X -   - X -   - - -   - - -
         *  - - -   - - -   - - -   X - -   - - -   X - -   - - -   - - -   - - X   X - -
         *  
         */
        // Common Sense of attack
        for (int i=0;i<3;i++)
            if (!o[i*3+0]&&o[i*3+1]&&o[i*3+2]&&!x[i*3+0])
                return i*3+0;
        for (int i=0;i<3;i++)
            if (o[i*3+0]&&!o[i*3+1]&&o[i*3+2]&&!x[i*3+1])
                return i*3+1;
        for (int i=0;i<3;i++)
            if (o[i*3+0]&&o[i*3+1]&&!o[i*3+2]&&!x[i*3+2])
                return i*3+2;
        for (int i=0;i<3;i++)
            if (!o[0+i]&&o[3+i]&&o[6+i]&&!x[0+i])
                return 0+i;
        for (int i=0;i<3;i++)
            if (o[0+i]&&!o[3+i]&&o[6+i]&&!x[3+i])
                return 3+i;
        for (int i=0;i<3;i++)
            if (o[0+i]&&o[3+i]&&!o[6+i]&&!x[6+i])
                return 6+i;
        if (!o[0]&&o[4]&&o[8]&&!x[0])
            return 0;
        if (o[0]&&!o[4]&&o[8]&&!x[4])
            return 4;
        if (o[0]&&o[4]&&!o[8]&&!x[8])
            return 8;
        if (!o[2]&&o[4]&&o[6]&&!x[2])
            return 2;
        if (o[2]&&!o[4]&&o[6]&&!x[4])
            return 4;
        if (o[2]&&o[4]&&!o[6]&&!x[6])
            return 6;
        
        // Common Sense of defence
        for (int i=0;i<3;i++)
            if (!x[i*3+0]&&x[i*3+1]&&x[i*3+2]&&!o[i*3+0])
                return i*3+0;
        for (int i=0;i<3;i++)
            if (x[i*3+0]&&!x[i*3+1]&&x[i*3+2]&&!o[i*3+1])
                return i*3+1;
        for (int i=0;i<3;i++)
            if (x[i*3+0]&&x[i*3+1]&&!x[i*3+2]&&!o[i*3+2])
                return i*3+2;
        for (int i=0;i<3;i++)
            if (!x[0+i]&&x[3+i]&&x[6+i]&&!o[0+i])
                return 0+i;
        for (int i=0;i<3;i++)
            if (x[0+i]&&!x[3+i]&&x[6+i]&&!o[3+i])
                return 3+i;
        for (int i=0;i<3;i++)
            if (x[0+i]&&x[3+i]&&!x[6+i]&&!o[6+i])
                return 6+i;
        if (!x[0]&&x[4]&&x[8]&&!o[0])
            return 0;
        if (x[0]&&!x[4]&&x[8]&&!o[4])
            return 4;
        if (x[0]&&x[4]&&!x[8]&&!o[8])
            return 8;
        if (!x[2]&&x[4]&&x[6]&&!o[2])
            return 2;
        if (x[2]&&!x[4]&&x[6]&&!o[4])
            return 4;
        if (x[2]&&x[4]&&!x[6]&&!o[6])
            return 6;
        // no common sense can be applied
        else
            return -1;
    }
    public static void showMemory()
    {
        try
        {
            FileReader fr = new FileReader("learn.dat");
            BufferedReader br = new BufferedReader(fr);
            String s="";
            while ((s=br.readLine())!=null)
            {
                System.out.println(s);
            }
        }
        catch (Exception e)
        {
            System.out.println("Reading error");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XOLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XOLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XOLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XOLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XOLearn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnRestart;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtDisplay;
    // End of variables declaration                   
}
